// Code generated by goctl. DO NOT EDIT.
// Source: student.proto

package studentclient

import (
	"context"

	"mymod/godemo/rpc/types/student"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRequest  = student.CreateRequest
	CreateResponse = student.CreateResponse
	DetailRequest  = student.DetailRequest
	DetailResponse = student.DetailResponse
	RemoveRequest  = student.RemoveRequest
	RemoveResponse = student.RemoveResponse
	UpdateRequest  = student.UpdateRequest
	UpdateResponse = student.UpdateResponse

	Student interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
		Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error)
	}

	defaultStudent struct {
		cli zrpc.Client
	}
)

func NewStudent(cli zrpc.Client) Student {
	return &defaultStudent{
		cli: cli,
	}
}

func (m *defaultStudent) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultStudent) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultStudent) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.Remove(ctx, in, opts...)
}

func (m *defaultStudent) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error) {
	client := student.NewStudentClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}
